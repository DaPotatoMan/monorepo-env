export type EnvMap = Record<string, string | boolean>

export interface NuxtRuntimeEnvMap {
  public: EnvMap
  private: EnvMap
}

// Functions
function createENVInterfaceData(env: EnvMap) {
  return Object.entries(env)
    .map(([key]) => `  readonly ${key}: string`)
    .join('\n')
}

/**
 * Generates .env types for Vite env variables
 * `import.meta.env.*`
 */
export function createViteTypes(mode: string, env: EnvMap) {
  const dtsData = createENVInterfaceData(env)

  const content = `
// Generated by monorepo-env
// mode = ${mode}

/// <reference types="vite/client" />

interface ImportMetaEnv {
${dtsData}
}

interface ImportMeta {
  readonly env: ImportMetaEnv
}
`

  return content.trim()
}
